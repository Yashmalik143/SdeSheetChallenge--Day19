// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
    void fillLPS(string str,int *lps)
    {
        int n = str.size();
        int len=0;
        lps[0]=0;
        int i =1;
        while(i<n)
        {
            if(str[i]==str[len])
            {len++;lps[i]=len;i++;}
            else
            {if(len==0){lps[i]=0;i++;}
             else {len=lps[len-1];}    
            }
        }
        
    }
        vector <int> search(string pat, string txt)
        {
            //code hee.
            int n=txt.size();
            int m =pat.size();
            int lps[m];
            fillLPS(pat,lps);
            int i=0,j=0;
            vector<int>v;
            while(i<n)
            {
                if(pat[j]==txt[i])
                {
                    i++;
                    j++;
                }
                
                if(j==m){
                    v.push_back((i-j)+1);
                    j=lps[j-1];
                }
                else if(i<n && pat[j] != txt[i])
                {
                    if(j==0) i++;
                    else {j=lps[j-1];}
                }
            } return v;
            
        }
     
};

// { Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string S, pat;
        cin >> S >> pat;
        Solution ob;
        vector <int> res = ob.search(pat, S);
        if (res.size()==0)
            cout<<-1<<endl;
        else {
            for (int i : res) cout << i << " ";
            cout << endl;
        }
    }
    return 0;
}

// Contributed By: Pranay Bansal
  // } Driver Code Ends
